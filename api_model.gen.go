// Package aboutmyemail provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package aboutmyemail

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// N400Error defines model for 400Error.
type N400Error struct {
	Message string `json:"message"`
}

// N500Error defines model for 500Error.
type N500Error struct {
	Message string `json:"message"`
}

// StatusResult defines model for StatusResult.
type StatusResult struct {
	// Id Identifier for the result
	Id string `json:"id"`

	// Messages Zero or more processing update messages
	Messages *[]string `json:"messages,omitempty"`

	// Token Opaque token copied from request
	Token *string `json:"token,omitempty"`

	// Url Where human readable result is available
	Url *string `json:"url,omitempty"`
}

// Submit defines model for Submit.
type Submit struct {
	// FinishedUrl Callback when processing is complete
	FinishedUrl *string `json:"finishedUrl,omitempty"`

	// From The email address for MAIL FROM
	From string `json:"from"`

	// Ip The IP address the mail is sent from
	Ip string `json:"ip"`

	// Options 'stage' for staged rendering
	Options *string `json:"options,omitempty"`

	// Payload The headers and body of the message
	Payload string `json:"payload"`

	// ProgressUrl Regular callbacks for progress messages
	ProgressUrl *string `json:"progressUrl,omitempty"`

	// Smtputf8 Whether the email is localized
	Smtputf8 *bool `json:"smtputf8,omitempty"`

	// To The email address for RCPT TO
	To string `json:"to"`

	// Token Opaque token returned in response
	Token *string `json:"token,omitempty"`
}

// SubmitForm defines model for SubmitForm.
type SubmitForm struct {
	// FinishedUrl Callback when processing is complete
	FinishedUrl *string `json:"finishedUrl,omitempty"`

	// From The email address for MAIL FROM
	From string `json:"from"`

	// Ip The IP address the mail is sent from
	Ip string `json:"ip"`

	// Options 'stage' for staged rendering
	Options *string `json:"options,omitempty"`

	// Payload The headers and body of the message
	Payload openapi_types.File `json:"payload"`

	// ProgressUrl Regular callbacks for progress messages
	ProgressUrl *string `json:"progressUrl,omitempty"`

	// Smtputf8 Whether the email is localized
	Smtputf8 *bool `json:"smtputf8,omitempty"`

	// To The email address for RCPT TO
	To string `json:"to"`

	// Token Opaque token returned in response
	Token *string `json:"token,omitempty"`
}

// SubmitSuccess defines model for SubmitSuccess.
type SubmitSuccess struct {
	// Id Identifier for the result
	Id string `json:"id"`
}

// UploadResult defines model for UploadResult.
type UploadResult struct {
	// Messages Diagnostics about uploaded files
	Messages []string `json:"messages"`
}

// ContentPostMultipartBody defines parameters for ContentPost.
type ContentPostMultipartBody struct {
	Filename *[]openapi_types.File `json:"filename,omitempty"`
}

// EmailJSONRequestBody defines body for Email for application/json ContentType.
type EmailJSONRequestBody = Submit

// EmailMultipartRequestBody defines body for Email for multipart/form-data ContentType.
type EmailMultipartRequestBody = SubmitForm

// ContentPostMultipartRequestBody defines body for ContentPost for multipart/form-data ContentType.
type ContentPostMultipartRequestBody ContentPostMultipartBody
